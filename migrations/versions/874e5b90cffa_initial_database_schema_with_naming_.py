"""Initial database schema with naming convention

Revision ID: 874e5b90cffa
Revises: 
Create Date: 2025-06-16 15:37:51.671041

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '874e5b90cffa'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('booking_sequence',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('next_value', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_booking_sequence'))
    )
    op.create_table('client',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=128), nullable=False),
    sa.Column('code', sa.String(length=128), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_client')),
    sa.UniqueConstraint('code', name=op.f('uq_client_code')),
    sa.UniqueConstraint('name', name=op.f('uq_client_name'))
    )
    op.create_table('location',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=128), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_location')),
    sa.UniqueConstraint('name', name=op.f('uq_location_name'))
    )
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('full_name', sa.String(length=128), nullable=False),
    sa.Column('email', sa.String(length=128), nullable=False),
    sa.Column('password_hash', sa.String(length=256), nullable=False),
    sa.Column('role', sa.String(length=20), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_user')),
    sa.UniqueConstraint('email', name=op.f('uq_user_email'))
    )
    op.create_table('space',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=128), nullable=False),
    sa.Column('location_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['location_id'], ['location.id'], name=op.f('fk_space_location_id_location')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_space'))
    )
    op.create_table('user_location',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('location_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['location_id'], ['location.id'], name=op.f('fk_user_location_location_id_location')),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name=op.f('fk_user_location_user_id_user')),
    sa.PrimaryKeyConstraint('user_id', 'location_id', name=op.f('pk_user_location'))
    )
    op.create_table('booking',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('booking_number', sa.String(length=10), nullable=False),
    sa.Column('space_id', sa.Integer(), nullable=False),
    sa.Column('client_id', sa.Integer(), nullable=False),
    sa.Column('start_date', sa.Date(), nullable=False),
    sa.Column('end_date', sa.Date(), nullable=False),
    sa.Column('rental_fee', sa.Float(), nullable=False),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['client_id'], ['client.id'], name=op.f('fk_booking_client_id_client')),
    sa.ForeignKeyConstraint(['space_id'], ['space.id'], name=op.f('fk_booking_space_id_space')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_booking')),
    sa.UniqueConstraint('booking_number', name=op.f('uq_booking_booking_number'))
    )
    op.create_table('booking_audit_log',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('booking_number', sa.String(length=10), nullable=True),
    sa.Column('booking_id', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('action', sa.String(length=20), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.Column('details', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['booking_id'], ['booking.id'], name=op.f('fk_booking_audit_log_booking_id_booking'), ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name=op.f('fk_booking_audit_log_user_id_user')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_booking_audit_log'))
    )
    with op.batch_alter_table('booking_audit_log', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_booking_audit_log_action'), ['action'], unique=False)
        batch_op.create_index(batch_op.f('ix_booking_audit_log_booking_id'), ['booking_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_booking_audit_log_timestamp'), ['timestamp'], unique=False)
        batch_op.create_index(batch_op.f('ix_booking_audit_log_user_id'), ['user_id'], unique=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('booking_audit_log', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_booking_audit_log_user_id'))
        batch_op.drop_index(batch_op.f('ix_booking_audit_log_timestamp'))
        batch_op.drop_index(batch_op.f('ix_booking_audit_log_booking_id'))
        batch_op.drop_index(batch_op.f('ix_booking_audit_log_action'))

    op.drop_table('booking_audit_log')
    op.drop_table('booking')
    op.drop_table('user_location')
    op.drop_table('space')
    op.drop_table('user')
    op.drop_table('location')
    op.drop_table('client')
    op.drop_table('booking_sequence')
    # ### end Alembic commands ###
